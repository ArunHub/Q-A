function DD(){this.name='arun';this.age=5}
rr = new DD();
rr1 = Object.create(new DD());
console.log('rr',rr);
console.log('rr1',rr1);
DD.prototype.ddd = 123;
console.log(rr,'rr');
console.log(rr1,'rr1');

Here rr and rr1 have prototype ddd how ?


how encapsulation css happen in angular
<app-root>loading...</app-root>
how to replace loading... in appmodule.ts
https://developer.mozilla.org/en-US/docs/Mozilla/Introduction_to_Layout_in_Mozilla

react form validation -> refs -> input new attributes and regex patterns
security in react spa -> authentication using router
react testing from mahesh sabnis
anto preact react forms testing

web securities
crsf
cross site scripting
assessebility
how to make site accessible 
tools for assessibility
interceptors in react
redux
testing
react-spotify
how to get bearer token in artist list component?
how to design app without redux / or how to pass props to child without service, backend storage, web storages
Redux - merge props and other parameters of connect function
Testing â€“ what are starting task you will check in component while writing testcase
how to spy on functions using jest
commonly used header requests
how to optimize or increase performance of website
what tools you will use to increase performance
bootstrap and its uses
responsive design

saga/thunk
diff react n jquery dom -> modularity -> react inject component as dependecny -> in jquery we should use every code on load
redirect and 
do form get authenticated when url comes as localhost:3000/form
merge props
commonly used header requests
noteable:
switchMap operator in angular routing
Observable paramMap
Snapshot
Heroes list: optionally selecting a hero while clicking back button
animations in angular routing
The router reuses components by default, so the Crisis Detail component will be re-used as you select different crises.

hash
routing
jit
for routes

https://jsfiddle.net/u1bh23kv/6/

dont create closures as it creates in memory leak because of non deletion of old reference

when large response data comes while browser has so many browser tabs, then we can implement increasing heap size for our application 

and also can get large response data using observable than promise since it returns whole data and may get delay. Using  observable, can implement pagination and load streams of 100 chunk data in background and make browser smoother

https://facebook.github.io/create-react-app/

18601207777 rupay icici
1800 11 8005  UAN

name the primitive data types
Is function is a datatype
what will return if typeof function ?
how to create class in ES5/ vanilla javascript ?
How prototype is useful ?
Various methods to call a function
difference between function call and apply
At what scenario call and apply are useful ?
suppose if sending an undeclared object directly in apply first parameter, what it returns ?
how to handle large amount of data as response and show in UI without making browser unresponsive?
tech stack of previous project worked ?
how will you implement lazy loading in router?


how to increase performance load in angular
how to optimize the application at build level
how to optimize the application at code level
compare the objects using id and find its difference
create a reusable component for grid widget and achieve fast rendering with large amount of data ?
working knowledge in ag-grid ?
what implementation can be done at top of webpack build to increase performance of application .
what difference does Reactjs make in performance wise in comparable to angular framework?
internal working of map, filter method ? 
apart from Map, filter in-built methods how to increase the iteration and rendering speed of complex nested objects? For say 5lakhs data


html css js
loading each page from server for data
many files -> performance
spa using webpack bundler
seperate ui and js for single page and updating when needed
form module and components
store data in service to make light weight component
use directive on particular element or dom in component or normal dom
pipe to filter some data before rendering
template n reactive forms
pass data using data binding, service , input output, stream observable subscribe
router
authenticate using canactivate, canactivatechild for child components access
resolve guard to prefetch data before rendering component when you have to wait for data from network call after component initialized
again many files imported in appmodule
so find and seperate feature module and lazy load it
use interceptor to put common headers for request and response
emit data from lazy feature module to parent root component module
	cant use emit data using output since we navigate using router and not using selector 	
	observable didnt work since root component got initialized and it asks for subscribe method which will get undefined. because we depend on auth call to authenticate and send data to root 
-> subject asObservable solves the problem since it can push new values as well as subscribe to it. Not like observable, as we only subscribes to it as REad Only
and how only subject can do it ? not observable
But without observable how angular can achieve it? no 

cold observable -> is lazy and published value after subscribing
hot observable -> synchronous and publish value even not subsrcribed
https://blog.thoughtram.io/angular/2016/06/16/cold-vs-hot-observables.html
to return value , use do() , map() inside pipe so that observable returns value before subscribing
